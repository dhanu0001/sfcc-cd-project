version: 2.1
orbs:
  slack: circleci/slack@4.10.1

commands:
  # notify_slack_error:
  #   steps:
  #     - slack/notify:
  #         event: fail
  #         template: basic_fail_1

  # notify_slack_pass:
  #   steps:
  #     - slack/notify:
  #         event: pass
  #         template: basic_success_1
  
  # trigger_slack_notification:
  #   steps:
  #     - slack/notify:
  #         custom: | 
  #           {
  #               "blocks": [
  #                   {
  #                       "type": "section",
  #                       "text": {
  #                           "type": "mrkdwn",
  #                           "text": "Failed: $CIRCLE_USERNAME's build of \n<$CIRCLE_BUILD_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME>\n(<https://app.circleci.com/pipelines/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME?branch=$CIRCLE_BRANCH|$CIRCLE_BRANCH>) \n- <$CIRCLE_BUILD_URL|$CIRCLE_JOB> failed" 
  #                       }
  #                   }
  #               ]
  #           }
  #         event: fail
  

parameters:
  deploy_branch:
    type: string
    default: "circleci-project-setup"


jobs:
  build-notify:
    docker:
      - image: cimg/node:17.2.0
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install SFCC CLI
          command: |
            sudo npm install -g sfcc-ci
            sfcc-ci --version
      - run:
          name: Authenticate with SFCC
          command: |
            sfcc-ci client:auth $CLIENT_ID $CLIENT_SECRET
            
      - run:
          name: Status of created sandbox by SFCC User
          command: |
            npx sfcc-ci sandbox:get --sandbox $my_sandbox_id
      
      - run:
          name: List of sandboxes
          command: |
            sfcc-ci sandbox:list
      # - notify_slack_error
      # - notify_slack_pass
    
      - when:
          condition:
            equal: [ CXDO-578/slack-notifications, << pipeline.git.branch >> ]
          steps:
            - run: echo "I am on slack-notification [branch]"
            
  notify:
    docker:
      - image: "cimg/base:stable"
    steps:
      - slack/notify:
          event: fail
          custom: |
            custom: | 
            {
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "Failed: $CIRCLE_USERNAME's build of \n<$CIRCLE_BUILD_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME>\n(<https://app.circleci.com/pipelines/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME?branch=$CIRCLE_BRANCH|$CIRCLE_BRANCH>) \n- <$CIRCLE_BUILD_URL|$CIRCLE_JOB> failed" 
                        }
                    }
                ]
            }  


workflows:
  main-workflow:
    jobs:
      - build-notify:
          context:
            - slack-notifications
          filters:
            branches:
              only:
                - circleci-project-setup
      - notify:
        #  requires:
        #    - build-notify
         context: [slack-notifications]
